####################
# Tasks to resolve #
####################

Limitations de IG des 10k candle/mois en fetch :
    - IG n'offre que les historique des commodities, des indices et des forex (et pas des actions)
    - selon la stratégie on en a besoin au moins de 50 par timeframe par symbol à chaque démarrage pour se synchroniser,

Distance et timeout-distance si en DIST doivent être supporté par distance_type et timeout_distance_type
dans les methode de SL/TP et dynamiques.

Bootstrap et Preprocess risque de se recouvrer dans certains cas :
    - comment éviter cela si la stratégie execute les 2 méthodes ?
    - le bootstrap devrait être retiré au profit d'une initialisation des signaux
        - utilisant le depth normal, pas d'history comme ça
            - on a bourricot, firebird et scalpspectre qui bootstrap
                - bourricot : c'est juste pour détecter les pullback, ça peu se faire sans état, et pas utile pour les CVP
                - scalpspectre : pas besoin car c'est pour du scalp et est abandonné
                - firebird : pareil que pour bourricot on peu calculer les flags autrement
            => une méthode bootstrap mais qui ne rejout pas les candles :
                - ce qui en plus évite les imprécisions de ce pseudo replay

Sum order :
  - si spot : sum base (au moins sum pour EUR et USD), pour et eviter le rejet de l'API si qty insuffisante
        - attention à l'arrondit pour que ça ne bloque pas un autre order
        - le faire sur le watcher, lors d'order event, générer le asset update signal, locked/free
        - le faire sur le trader lors du __fetch_assets
        - si pas de leverage, ok ok est bien spot, sinon ignorer
        - si buy :
            - base free - volume executé en quote
            - quote -free +lock mais oter le volume executé
            - asset update signal
        - si sell :
            - base -free +lock mais oter le volume executé
            - quote free + volume executé en quote
            - asset update signal

- option --object=profile-for-account:\<account-id\> pour supprimer les data de strategy

- dans le cadre du reduce :
    base trader : OK (tester)
    position trade : OK (tester)
    position : update profit and loss doit tenir compte du realized PNL

    position paper trader : doit ajuster le prix de sortie moyen en case de reduce mais aussi de close apres reduce

    ind margin paper trader : idem
    strategy ind margin trade : idem

    margin trader : idem mais n'est plus utilisé
    strategy margin trade : idem mais n'est plus utilisé


#######
# WIP #
#######

- Gestion reco WS apres perte temporaire cas binance (voir comme kraken)

- Dans la vue aggtrade ajouter un avg entry price et total qty par market

- kraken watcher et trader :
    - fetch des positions
    - fetch des trades history et calcule des prix d'entré moyen par asset
    - finir WS des positions (margin)
    - comment savoir si trade maker ou taker ?
    - revoir que si besoin ownTrade pour signal ORDER_TRADED
    - calcule des qty locked par asset en fonction des ordres ouverts (attention aux arrondis)

- WebTrader
    - HTTP :
        - POST/GET reinvest-gain handler
        - POST/GET DCA handler
    - WS :
        - notify/wt-read strategy-trader context data
        - notify/wt-read strategy-trader regions hit
    - display dialog detail with :
        - read/modify affinity
        - read/modify max-trade
        - read/modify contexts
    - charting :
        - charting OHLC et ticks (streaming) + performance (WIP)
        - goto charting historique sur un trade passé
        - ticker WS, basé sur quoi ? trader ticker ? strategy instrument ?
            - plutôt sur le trader car pas besoin de surcharger encore le strategy trader
    - session expiry message to renew
    - toggle audio et alt sound alerts (et save conf)
    - listes :
        - trier par (% pnl+-, market+-, date+-, upnl+-)
        - paginer si list > 100 élements
    - menu + modal pour créer une alerte price-cross
    - menu + modal pour créer une range region
    - menu + modal pour créer une trend region
    - recevoir stream de bid/ask, abonnement/resiliation en vue graphique
    - calculer r:r sur open trade, calcule % et montant risqué selon stop-loss


########
# Bugs #
########

- les ordres avec binance ne sont pas retire du trader (oblige de reconnect pour purger la liste)

- WebTrader : on ne peu pas faire des reduce de quantity < à 1
- WebTrader : Si on passe en pip au lieu de % ça n'affiche pas tjs bien la valeur selon le marché pour les modify SL / TP

- Supprimer le client chart une fois la version web réalisée, donc ce bug ne devrait plus être

- Problème sur le comptage de la quantité de sortie, et du prix moyen de sortie d'un trade
    - En effet si la sortie est effectué par plusieurs ordres dans le cas du filled et exec-price, pas de problème,
        tout s'ajoute, mais si on a que cumulative-filled et avg-price alors remplacer les valeurs comme sur
        le trade d'entré va écraser les valeurs liées au trades de sorties précédents.
        - Exemple un take-profit limit, mais mettons la quantité n'est pas fully-filled, et finalement intervient
            pour une raison (stop-loss, timeout) un ordre de sortie au market (qui va devoir cancel le premier ordre)
    - Donc gérer peut être 2 compteurs pour la sortie, un temporaire lié au trade de sortie actif, et le normal

- TD9 countdown a debug et tester


##########
# Urgent #
##########

- certains outils fonctionnent en multi-market list --market=A,B,C...' d'autres ne supporte qu'un seul market (check options)

- auto unsubscribe chart at web client close
- auto unsubscribe charts when no web client connected on server

- paper trader base exchange rate mais surtout contract size doit etre recalcule a chaque step en backtest
    - pose probleme sur bitmex XTBUSD => 1/price**2 uniquement sinon la valeur reste a l'initiale en DB
    - devrait ajouter un MARKET TYPE INVERSE (PERPETUAL) et donc calculer 1/price et contract_size = 1

- def dumps_context(self, context_id: str) -> Union[dict, None]: doit etre generic et doit utiliser context dumps method
   - est ce qu'on veut vraiment dumps ca... au final c'est plus l'oeuvre de la strategy

- Verification des trades par la method check :
    - implementer order_info pour le trader bitmex et verifier
    - implementer order_info pour le trader ig et verifier
    - verifier order_info pour le trader binance
    - verifier order_info pour le trader kraken car des bug etrangent se produisent parfois
    - verifier order_info pour le trader binancefutures (plus possible pour l'instant)


##################
# Uniformization #
##################

- Move from siis.py for the resting command part to command_handler

- Finir les conversion des tools avec le model Tool (binarizer, fetcher, optimizer)

- close_position and modify_position must return Order REASON code in place of boolean

- Uniformiser l'order book (bitmex, binance, binancefutures, kraken)
    - avoir un object OrderBook facile à mettre à jour et à exploiter
    - utiliser DepthCacheManager pour binance et binancefutures

- Gérer la partie locked sur le paper trader en mode asset
    - ne pas tout gérer en free, peu important car ça n'empêche pas de fonctionner


#########
# Bonus #
#########

- Dans la state view ajouter un flag pour dire qu'un training est en cours

- Ne pas utiliser l'api-key/auth en paper-mode a finir pour binance et binancefutures
- Ne pas utiliser l'api-key/auth en paper-mode a finir pour bitmex

- Commande de fusion et split des trades pour un instrument donné (à réfléchir)

- Ajouter TradeOp : TriggerEntry et TriggerLimitEntry, ainsi avoir le trigger coté bot,
    et ne pas bloquer les fonds coté broker

- A chaque fois que un espace (separateur de parametre) est inséré, lors d'une commande, proposer l'entrée suivante
    de HELP de la commande, en fonction de l'index

- tool withdraw (ou command) simple avec pin code (2AF) paire et addresse
    - peut utiliser un alias d'adresse ou l'adresse enregistré par défaut (wallets.json)
    - montant de la transaction

- tool withdraw emergency (ou command) qui annule tout les buy pending ou incomplet,
    et qui transfert sur les hard wallets (ou soft wallet)

- tool withdraw emergency (ou command) comme précédente mais qui va revendre toutes les paires
    sur une seule de reference et ensuite transferer sur le le wallet de reference
        - la même mais avec un découpe en % sur N asset, et N wallet (hard ou soft)


############
## Divers ##
############

Server
------

- recup et intégration d'un int +1 ou -1 pour dire direction du trade (-bid, +ask)
- propagation de la dite info au stratégie
- stockage dans les fichiers trades avec en ASCII 1 ask 0 bid et en binaire un octet 1 ask 0 bid
- creation d'un tick bar avec nombre de tick par barre
- creation d'un tick bar reversal avec nombre de tick avant reversal
- mesure des hedge zone sur tick bar
- mesure des balance bid ask par tick
- mesure des balance bid ask par tick bar
- mesure des volume imbalance par tick bar
- mesure des volume delta
- mesure en mode croisé bid x ask ou ask x bid
- parametrage des volume
- detection auto selon volume des précédentes tick bar pour ajuster les parametre des tick bar et autres seuils des indicateurs de mesure


Web Client
----------

- tracer tick bar et reversal sur client web
- tracer bougie sur client web
- tracer volume bar sur client web
- tracer volume delta sur client web


- modify_take_profit / modify_stop_loss ammélioration :
    1) handler sur le strategytrader
    2) si modifie localement alors doit générer un notify update car il n'y aura pas de signal du broker
    3) si modifie et 'forced' (command) mais que asset trade et pas encore is_open alors danger de créer un ordre sur 0 qty or autre qty d'un autre trade
    4) utilisation du handler partout en lieu et place (strategies, command, operation)
    5) commnent gérer si has_xxx_order dans operation, dans command, autres cas... niveau handler ?


#################
## Data source ##
#################

- PyEX (mais c'est payant) => rapidapi-morningstar mais pas de WS
- polygon.io (99$ à 399$ / mois) => selon 1m ou tick, REST ou WS
- rapidapi-yahoo-finance pour récupérer stock, indices, forex quotes, mappinng à un autre broker (ig.com...) pour le prefetch
- rapidapi-morningstar pour récupérer les actions et indices intraday, D, W, M, mappinng à un autre broker (ig.com...) pour le prefetch
